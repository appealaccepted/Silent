local Players, Client, Mouse, RS, Camera =
	game:GetService("Players"),
game:GetService("Players").LocalPlayer,
game:GetService("Players").LocalPlayer:GetMouse(),
game:GetService("RunService"),
game.Workspace.CurrentCamera

local Circle = Drawing.new("Circle")
Circle.Color = Color3.new(1, 1, 1) -- 1,1,1 normal -- 1,0,0 red
Circle.Thickness = 1
Circle.Filled = false

if Settings.FOV.Filled == true then
	Circle.Filled = true
else
	if Settings.FOV.Filled == false then
		Circle.Filled = false
	end
end

local UpdateFOV = function ()
	if (not Circle) then
		return Circle
	end
	Circle.Visible = Settings.FOV["Visible"]
	Circle.Radius = Settings.FOV["Radius"] * 3
	Circle.Position = Vector2.new(Mouse.X, Mouse.Y + (game:GetService("GuiService"):GetGuiInset().Y))
	return Circle
end

-- Shake

-- \\ Panic key // --

-- Input under this comment --


-- // DELETE ME AND START LINE HERE \\ --


-- end --

RS.Heartbeat:Connect(UpdateFOV)

ClosestPlrFromMouse = function()
	local Target, Closest = nil, 1/0

	for _ ,v in pairs(Players:GetPlayers()) do
		if (v.Character and v ~= Client and v.Character:FindFirstChild("HumanoidRootPart")) then
			local Position, OnScreen = Camera:WorldToScreenPoint(v.Character.HumanoidRootPart.Position)
			local Distance = (Vector2.new(Position.X, Position.Y) - Vector2.new(Mouse.X, Mouse.Y)).Magnitude

			if (Circle.Radius > Distance and Distance < Closest and OnScreen) then
				Closest = Distance
				Target = v
			end
		end
	end
	return Target
end

local WTS = function (Object)
	local ObjectVector = Camera:WorldToScreenPoint(Object.Position)
	return Vector2.new(ObjectVector.X, ObjectVector.Y)
end

local IsOnScreen = function (Object)
	local IsOnScreen = Camera:WorldToScreenPoint(Object.Position)
	return IsOnScreen
end

local FilterObjs = function (Object)
	if string.find(Object.Name, "Gun") then
		return
	end
	if table.find({"Part", "MeshPart", "BasePart"}, Object.ClassName) then
		return true
	end
end

local GetClosestBodyPart = function (character)
	local ClosestDistance = 1/0
	local BodyPart = nil
	if (character and character:GetChildren()) then
		for _,  x in next, character:GetChildren() do
			if FilterObjs(x) and IsOnScreen(x) then
				local Distance = (WTS(x) - Vector2.new(Mouse.X, Mouse.Y)).Magnitude
				if (Circle.Radius > Distance and Distance < ClosestDistance) then
					ClosestDistance = Distance
					BodyPart = x
				end
			end
		end
	end
	return BodyPart
end

local Prey

game:GetService("RunService").RenderStepped:Connect(function()
	if Settings.Checks.NoGroundShots == true and Prey.Character:FindFirstChild("Humanoid") == Enum.HumanoidStateType.Freefall then
		pcall(function()
			local PreyVelocity = Prey.char[Settings.Silent["Part"]]
			PreyVelocity.Velocity = Vector3.new(PreyVelocity.Velocity.X * 1, PreyVelocity.Velocity.Y * 5, PreyVelocity.Velocity.Z * 1)
			PreyVelocity.AssemblyLinearVelocity = Vector3.new(PreyVelocity.Velocity.X * 1, PreyVelocity.Velocity.Y * 5, PreyVelocity.Velocity.Z * 1)
		end)
	end
end)

Mouse.KeyDown:Connect(function(KeyPressed)

	local DisableSilentAim = Settings.Silent.ActivateKey

	if KeyPressed == (DisableSilentAim:lower()) then
		if Settings.Silent.Enabled == false then
			Circle.Color = Color3.new(1, 1, 1)
			Settings.Silent.Enabled = true

			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "XLC : Testing",
				Text = "Silent was Enabled!"
			})
		elseif Settings.Silent.Enabled == true then
			Circle.Color = Color3.new(1, 0, 0)
			Settings.Silent.Enabled = false

			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "XLC : Testing",
				Text = "Silent was disabled!"
			})
		end
	end
end)

if Settings.Macro.Enabled == true and Settings.Macro.Keybind ~= nil then
	local Player = game:GetService("Players").LocalPlayer
	local Mouse = Player:GetMouse()
	local Macro = false
	Mouse.KeyDown:Connect(function(Key)
		if Key == Settings.Macro.Keybind then
			Macro = not Macro
			if Macro == true then
				repeat game:GetService("RunService").Heartbeat:wait()
					keypress(0x49)
					game:GetService("RunService").Heartbeat:wait()
					keypress(0x4F)
					game:GetService("RunService").Heartbeat:wait()
					keyrelease(0x49)
					game:GetService("RunService").Heartbeat:wait()
					keyrelease(0x4F)
					game:GetService("RunService").Heartbeat:wait()
				until Macro == false
			end
		end
	end)
end

task.spawn(function ()
	while task.wait() do
		if Prey then
			if Settings.Silent.Enabled and Settings.Silent.ClosestPart == true then
				Settings.Silent["Part"] = tostring(GetClosestBodyPart(Prey.Character)) -- gets closest part and doesn't shoot ground (unless your fov is mad low and you aim at the ground yourself)
			end
		end
	end
end)

local grmt = getrawmetatable(game)
local backupindex = grmt.__index
setreadonly(grmt, false)

grmt.__index = newcclosure(function(self, v)
	if (Settings.Silent.Enabled and Mouse and tostring(v) == "Hit") then

		Prey = ClosestPlrFromMouse()

		if Prey then
			local endpoint = game.Players[tostring(Prey)].Character[Settings.Silent["Part"]].CFrame + (
			game.Players[tostring(Prey)].Character[Settings.Silent["Part"]].Velocity * Settings.Silent.Pred
			)
			return (tostring(v) == "Hit" and endpoint)
		end
	end
	return backupindex(self, v)
end)
